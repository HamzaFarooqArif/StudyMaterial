@model WebApplication1.Models.EmployeeCourseSemesterViewModels

@{
    ViewBag.Title = "CoursesEdit";
}

<h2>Edit Employee Courses</h2>
<hr>
<dl class="dl-horizontal">
    <dt>
        Employee Name
    </dt>
    <dd>
        @ViewBag.EmployeeName
    </dd>
    <dt>
        Designation
    </dt>
    <dd>
        @ViewBag.EmployeeDesignation
    </dd>
</dl>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @*<div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Semester, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Semester, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Semester, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Batch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Batch" name="Batch" class="form-control">
                    <option></option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Semester, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Semester" name="Semester" class="form-control">
                    <option></option>
                </select>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Course, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="Course" name="Course" class="form-control">
                    <option></option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
        @{ if (ViewBag.color == "green")
            {
                <div class="alert alert-success">
                    <strong>Success!</strong> @ViewBag.message
                </div>
            }
            else if (ViewBag.color == "red")
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> @ViewBag.message
                </div>
            }
        }
    </div>
}

<div>
    @Html.ActionLink("Back to List", "CoursesIndex/"+ Model.EmployeeID)
</div>

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function (e) {
            $.when($.ajax(getBatches())).then(function () {
                setDefault("Batch", @Model.BatchID);
                $.when($.ajax(getSemesters())).then(function(){
                    setDefault("Semester", @Model.SemesterID);
                    $.when($.ajax(getCourses())).then(function(){
                        setDefault("Course", @Model.CourseID);
                    });
                });
            });
        });
        $("#Batch").change(function () {
            getSemesters()
        });
        $("#Semester").change(function () {
            getCourses();
        });

        function getBatches() {
            var d = {};
            d.url = '@Url.Action("LoadBatches", "Employee")';
            d.type = "POST";
            d.dataType = "json";
            d.contentType = "application/json";
            d.success = function (r) {
                $("#Batch").empty();
                $("#Batch").prepend("option value='' selected='selected'></option>");
                for (var i = 0; i < r.length; i++) {
                    $("#Batch").append('<option value="' + r[i].ID + '">' + r[i].Name + '</option>');
                }
            };
            $.ajax(d);
        }

        function getSemesters() {
            debugger;
            event.preventDefault();
            var $url = '/Employee/LoadSemester';
            //alert($url);

            $.ajax({
                url: $url,
                type: 'POST',
                datatype: "json",
                data: jQuery.param({
                    item: $("#Batch option:selected").val(),
                }),
                success: function (r) {
                    $("#Semester").empty();
                    $("#Semester").prepend("option value='' selected='selected'></option>");
                    for (var i = 0; i < r.length; i++) {
                        $("#Semester").append('<option value="' + r[i].ID + '">' + r[i].Name + '</option>');
                    }

                }
            });
        }

        function getCourses() {
            debugger;
            event.preventDefault();
            var $url = '/Employee/LoadSemesterCourses';

            $.ajax({
                url: $url,
                type: 'POST',
                datatype: "json",
                data: jQuery.param({
                    semesterID: $("#Semester option:selected").val()
                }),
                success: function (r) {
                    $("#Course").empty();
                    $("#Course").prepend("option value='' selected='selected'></option>");
                    for (var i = 0; i < r.length; i++) {
                        $("#Course").append('<option value="' + r[i].ID + '">' + r[i].Name + '</option>');
                    }
                }
            });
        }

        function setDefault(id, itemId) {
            var selectobject = document.getElementById(id);

            for (var i, j = 0; i = selectobject.options[j]; j++) {
                if (i.value == itemId) {
                    selectobject.selectedIndex = j;
                    break;
                }
            }
        }
    </script>
}
