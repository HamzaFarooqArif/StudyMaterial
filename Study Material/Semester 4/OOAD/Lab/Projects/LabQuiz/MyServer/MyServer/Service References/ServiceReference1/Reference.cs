//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyServer.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/MyServer")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        MyServer.ServiceReference1.CompositeType GetDataUsingDataContract(MyServer.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<MyServer.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(MyServer.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerUser", ReplyAction="http://tempuri.org/IService1/registerUserResponse")]
        bool registerUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/registerUser", ReplyAction="http://tempuri.org/IService1/registerUserResponse")]
        System.Threading.Tasks.Task<bool> registerUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isValidUser", ReplyAction="http://tempuri.org/IService1/isValidUserResponse")]
        bool isValidUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/isValidUser", ReplyAction="http://tempuri.org/IService1/isValidUserResponse")]
        System.Threading.Tasks.Task<bool> isValidUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        void AddProduct(string productName, string price, bool isEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddProduct", ReplyAction="http://tempuri.org/IService1/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(string productName, string price, bool isEnabled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        MyServer.ServiceReference1.GetProductListResponse GetProductList(MyServer.ServiceReference1.GetProductListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProductList", ReplyAction="http://tempuri.org/IService1/GetProductListResponse")]
        System.Threading.Tasks.Task<MyServer.ServiceReference1.GetProductListResponse> GetProductListAsync(MyServer.ServiceReference1.GetProductListRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProductListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] prodctsName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] prodctsPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] productsIsEnabled;
        
        public GetProductListRequest() {
        }
        
        public GetProductListRequest(string[] prodctsName, string[] prodctsPrice, string[] productsIsEnabled) {
            this.prodctsName = prodctsName;
            this.prodctsPrice = prodctsPrice;
            this.productsIsEnabled = productsIsEnabled;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProductListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string[] prodctsName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string[] prodctsPrice;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string[] productsIsEnabled;
        
        public GetProductListResponse() {
        }
        
        public GetProductListResponse(string[] prodctsName, string[] prodctsPrice, string[] productsIsEnabled) {
            this.prodctsName = prodctsName;
            this.prodctsPrice = prodctsPrice;
            this.productsIsEnabled = productsIsEnabled;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyServer.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyServer.ServiceReference1.IService1>, MyServer.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public MyServer.ServiceReference1.CompositeType GetDataUsingDataContract(MyServer.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<MyServer.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(MyServer.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public bool registerUser(string userName, string password) {
            return base.Channel.registerUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> registerUserAsync(string userName, string password) {
            return base.Channel.registerUserAsync(userName, password);
        }
        
        public bool isValidUser(string userName, string password) {
            return base.Channel.isValidUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> isValidUserAsync(string userName, string password) {
            return base.Channel.isValidUserAsync(userName, password);
        }
        
        public void AddProduct(string productName, string price, bool isEnabled) {
            base.Channel.AddProduct(productName, price, isEnabled);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(string productName, string price, bool isEnabled) {
            return base.Channel.AddProductAsync(productName, price, isEnabled);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MyServer.ServiceReference1.GetProductListResponse MyServer.ServiceReference1.IService1.GetProductList(MyServer.ServiceReference1.GetProductListRequest request) {
            return base.Channel.GetProductList(request);
        }
        
        public void GetProductList(ref string[] prodctsName, ref string[] prodctsPrice, ref string[] productsIsEnabled) {
            MyServer.ServiceReference1.GetProductListRequest inValue = new MyServer.ServiceReference1.GetProductListRequest();
            inValue.prodctsName = prodctsName;
            inValue.prodctsPrice = prodctsPrice;
            inValue.productsIsEnabled = productsIsEnabled;
            MyServer.ServiceReference1.GetProductListResponse retVal = ((MyServer.ServiceReference1.IService1)(this)).GetProductList(inValue);
            prodctsName = retVal.prodctsName;
            prodctsPrice = retVal.prodctsPrice;
            productsIsEnabled = retVal.productsIsEnabled;
        }
        
        public System.Threading.Tasks.Task<MyServer.ServiceReference1.GetProductListResponse> GetProductListAsync(MyServer.ServiceReference1.GetProductListRequest request) {
            return base.Channel.GetProductListAsync(request);
        }
    }
}
